apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eks_user_role
  namespace: default
rules:
  - apiGroups: ["apps"]
    resources: ["deployments", "deployments/*", "replicasets", "replicasets/*"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: [""]
    resources: ["configmaps", "configmap/*", "secrets", "secrets/*"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims", "persistentvolumeclaims/*", "persistentvolumes/*", "persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: [""]
    resources: ["namespaces", "pods", "services", "pods/exec","pods/status","events", "nodes","services/*","pods/log","replicationcontrollers","replicationcontrollers/*"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses","storageclasses/*"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: ["autoscaling"]
    resources: ["horizontalpodautoscalers","horizontalpodautoscalers/*"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]


---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: eks_user_cluster_role_binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: eks_user_role
subjects:
  - kind: Group
    name: eks_user_group
    apiGroup: rbac.authorization.k8s.io

---

kind: ConfigMap
apiVersion: v1
metadata:
  name: aws-auth
  namespace: kube-system
data:
  mapUsers: |-
    - userarn: arn:aws:iam::450839793689:user/eks_user
      username: eks_user
      groups: ["eks_user_group"]
